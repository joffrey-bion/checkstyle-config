plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id("org.hildan.github.changelog") version "0.8.0"
}

apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'org.hildan.checkstyle'
version = '2.3.0'
description = 'A checkstyle configuration shared by multiple projects'
ext.labels = ['checkstyle', 'codestyle', 'coding', 'style', 'configuration', 'config']
ext.licenses = ['MIT']

def getPropOrEnv = { String prop, String envVar, String defaultValue = null ->
    if (project.hasProperty(prop)) {
        return project.property(prop)
    }
    return System.getenv(envVar) ?: defaultValue
}

ext {
    githubUser = getPropOrEnv('githubUser', 'GITHUB_USER')
    githubRepoName = rootProject.name
    githubSlug = "$githubUser/$githubRepoName"
    githubRepoUrl = "https://github.com/$githubSlug"
    ossrhUserToken = getPropOrEnv('ossrhUserToken', 'OSSRH_USER_TOKEN')
    ossrhKey = getPropOrEnv('ossrhKey', 'OSSRH_KEY')
}

changelog {
    futureVersionTag = "v${project.version}"
    releaseUrlTemplate = "https://bintray.com/joffrey-bion/maven/checkstyle-config/%s"
    releaseUrlTagTransform = { it.substring(1) }
    customTagByIssueNumber = [1: "v1.1.0"]
}

def pomConfig = {
    scm {
        url githubRepoUrl
        connection 'scm:git:' + githubRepoUrl + '.git'
        developerConnection 'scm:git:git@github.com:' + githubSlug + '.git'
    }
    licenses {
        license {
            name 'The MIT License'
            url 'https://opensource.org/licenses/MIT'
        }
    }
    developers {
        developer {
            name 'Joffrey Bion'
            email 'joffrey.bion@gmail.com'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                def root = asNode()
                root.appendNode('name', project.name)
                root.appendNode('description', project.description)
                root.appendNode('url', githubRepoUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = getPropOrEnv('bintrayUser', 'BINTRAY_USER')
    key = getPropOrEnv('bintrayApiKey', 'BINTRAY_KEY')
    publications = ['maven']
    publish = true

    pkg {
        repo = getPropOrEnv('bintrayRepoLibs', 'BINTRAY_REPO_LIBS')
        name = project.name
        desc = project.description
        labels = project.labels ?: [project.name]
        licenses = project.licenses ?: []

        websiteUrl = githubRepoUrl
        issueTrackerUrl = githubRepoUrl + '/issues'
        vcsUrl = githubRepoUrl + '.git'
        githubRepo = githubSlug

        version {
            desc = project.description
            vcsTag = 'v' + project.version
            gpg { sign = true }
            mavenCentralSync {
                sync = true
                user = ossrhUserToken
                password = ossrhKey
            }
        }
    }
}
bintrayUpload.dependsOn(build)
